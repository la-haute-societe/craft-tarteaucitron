{% embed "tarteaucitron/settings/service" with {"id": "google-analytics-universal"} %}
    {% import "_includes/forms" as forms %}
    {% import "tarteaucitron/settings/macros" as macros %}

    {% block name %}
        {% if 'isGoogleAnalyticsUniversalEnabled' in overrides %}
            <div class="info warning">{{ macros.configWarning('isGoogleAnalyticsUniversalEnabled') }}</div>
        {% endif %}
        {{ 'Google Analytics (universal)'|t('tarteaucitron') }}
    {% endblock %}

    {% block enable %}
        {{ forms.lightswitchField({
            id: 'isGoogleAnalyticsUniversalEnabled',
            name: 'isGoogleAnalyticsUniversalEnabled',
            on: settings.isGoogleAnalyticsUniversalEnabled,
            toggle: true,
            errors: settings.getErrors('isGoogleAnalyticsUniversalEnabled'),
            disabled: 'isGoogleAnalyticsUniversalEnabled' in overrides,
        }) }}
    {% endblock %}

    {% block options %}
        {{ forms.textField({
            label: "Analytics UA"|t('tarteaucitron'),
            id: 'googleAnalyticsUniversalUa',
            name: 'googleAnalyticsUniversalUa',
            value: settings.googleAnalyticsUniversalUa,
            required: true,
            warning: 'googleAnalyticsUniversalUa' in overrides ? macros.configWarning('googleAnalyticsUniversalUa'),
            disabled: 'googleAnalyticsUniversalUa' in overrides,
            errors: settings.getErrors('googleAnalyticsUniversalUa')
        }) }}

        {{ forms.textField({
            label: "Additional Javascript"|t('tarteaucitron'),
            id: 'googleAnalyticsUniversalMore',
            name: 'googleAnalyticsUniversalMore',
            instructions: '[Optional] Some javascript code to be executed when the {service} service has been loaded.'|t('tarteaucitron', { service: 'Google Analytics (universal)' }),
            value: settings.googleAnalyticsUniversalMore,
            warning: 'googleAnalyticsUniversalMore' in overrides ? macros.configWarning('googleAnalyticsUniversalMore'),
            disabled: 'googleAnalyticsUniversalMore' in overrides,
            errors: settings.getErrors('googleAnalyticsUniversalMore')
        }) }}
    {% endblock %}
{% endembed %}
